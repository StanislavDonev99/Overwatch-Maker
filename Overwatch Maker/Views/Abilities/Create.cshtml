@model Overwatch_Maker.Models.Ability

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2>Create Ability</h2>
<div class="alert alert-dismissible alert-info">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <strong>WoW!</strong> &nbsp; You are about to create a new ability. &nbsp; Can you handle the power?
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="select" name="Type">
                    <option>Damage</option>
                    <option>Heal</option>
                </select>
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 has-success">
                <textarea class="form-control" rows="3" id="textArea" name="Description" placeholder="Describe the ability with your own words"></textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-inline">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group" style="width: 280px;">
                    <input type="text" class="form-control" name="Duration" placeholder="e.g. 0.00">
                    <div class="input-group-addon">sec</div>
                </div>
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Strenght, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="slidecontainer" style="margin-top: 12px;">
                    <input type="range" min="1" max="500" value="250" class="slider" id="myRange" name="Strenght" oninput="showRange.value = myRange.value">
                     <output id="showRange" style="color: white;"></output>
                </div>
                @Html.ValidationMessageFor(model => model.Strenght, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Ability" class="btn btn-success" />

            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <a href='@Url.Action("Index", "Abilities")' class="btn btn-info"> <span class="glyphicon glyphicon-chevron-left"> </span> Back to List</a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
